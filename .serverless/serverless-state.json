{
  "service": {
    "service": "serverless-service",
    "serviceObject": {
      "name": "serverless-service"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*?]+?)}",
      "name": "aws",
      "runtime": "python3.7",
      "deploymentBucket": "552701094143-dev-lambda-deploy-packages",
      "role": "arn:aws:iam::552701094143:role/lambda-role",
      "ENV": "dev",
      "STAGE": "dev",
      "PRJ": "serverless",
      "region": "eu-central-1",
      "vpc": {
        "securityGroupIds": [
          "sg-041458cc20607e706"
        ],
        "subnetIds": [
          "subnet-0d6f484c6acfc1482",
          "subnet-095aa3b2bc2de9792"
        ]
      },
      "environment": {
        "DB_USER": {},
        "DB_PASSWORD": {},
        "DB_HOST": "rds-stack-mysql5168b53f-192k2uxhevjxc.cluster-ce24wookaqhw.eu-central-1.rds.amazonaws.com",
        "DB_PORT": 3306,
        "ACCOUNT_ID": "552701094143",
        "REGION": "eu-central-1",
        "SERVICE_NAME": "serverless-service",
        "STAGE": "dev"
      },
      "deploymentBucketObject": {
        "name": "552701094143-dev-lambda-deploy-packages"
      },
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "CurrentTimeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-service-dev-currentTime"
            }
          },
          "CurrentTimeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "552701094143-dev-lambda-deploy-packages",
                "S3Key": "serverless/serverless-service/dev/1599037647613-2020-09-02T09:07:27.613Z/serverless-service.zip"
              },
              "FunctionName": "serverless-service-dev-currentTime",
              "Handler": "handler.endpoint",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::552701094143:role/lambda-role",
              "Runtime": "python3.7",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DB_USER": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"DB_USER\"]"
                  },
                  "DB_PASSWORD": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"DB_PASSWORD\"]"
                  },
                  "DB_HOST": "rds-stack-mysql5168b53f-192k2uxhevjxc.cluster-ce24wookaqhw.eu-central-1.rds.amazonaws.com",
                  "DB_PORT": 3306,
                  "ACCOUNT_ID": "552701094143",
                  "REGION": "eu-central-1",
                  "SERVICE_NAME": "serverless-service",
                  "STAGE": "dev"
                }
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "CurrentTimeLogGroup"
            ]
          },
          "CurrentTimeLambdaVersionfO3pscZNz06CYcNLEJAcU1v2uSOrpfKOUCySBsvets": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CurrentTimeLambdaFunction"
              },
              "CodeSha256": "LoVxFQ8d1PThByetvwcZ42Six1OxIymKoSfZfZ9uHUY="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-serverless-service",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": "execute-api:Invoke",
                    "Resource": [
                      "execute-api:/*/*/*"
                    ],
                    "Condition": {
                      "IpAddress": {
                        "aws:SourceIp": [
                          "0.0.0.0/0",
                          "::/0"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          },
          "ApiGatewayResourcePing": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "ping",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPingGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePing"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CurrentTimeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1599037645682": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodPingGet"
            ]
          },
          "CurrentTimeLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::Join": [
                  ":",
                  [
                    {
                      "Fn::GetAtt": [
                        "CurrentTimeLambdaFunction",
                        "Arn"
                      ]
                    }
                  ]
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "552701094143-dev-lambda-deploy-packages"
          },
          "CurrentTimeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CurrentTimeLambdaVersionfO3pscZNz06CYcNLEJAcU1v2uSOrpfKOUCySBsvets"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      }
    },
    "custom": {
      "secrets": {
        "dev": {
          "db_user": "admin",
          "db_host": "rds-stack-mysql5168b53f-192k2uxhevjxc.cluster-ce24wookaqhw.eu-central-1.rds.amazonaws.com",
          "db_port": 3306,
          "account_id": "552701094143",
          "region": "eu-central-1"
        }
      }
    },
    "pluginsData": {},
    "functions": {
      "currentTime": {
        "handler": "handler.endpoint",
        "events": [
          {
            "http": {
              "path": "ping",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-service-dev-currentTime",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.7",
        "vpc": {},
        "versionLogicalId": "CurrentTimeLambdaVersionfO3pscZNz06CYcNLEJAcU1v2uSOrpfKOUCySBsvets"
      }
    },
    "serviceFilename": "serverless.yaml",
    "layers": {},
    "artifact": "/Users/o.benlagha/src/bitbucket.com/equa/aws-cdk-snippets/aws-devops/serverless/devops-lambda/.serverless/serverless-service.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/serverless-service/dev/1599037647613-2020-09-02T09:07:27.613Z",
    "artifact": "serverless-service.zip"
  }
}